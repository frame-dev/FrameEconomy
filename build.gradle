import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
}

apply plugin: "eclipse"
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

group = 'de.framedev'
version = '1.8-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url "http://framedev.stream:82/releases" }
    maven { url 'https://jitpack.io' }
}

publishing{
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            url "http://framedev.stream:82/releases"
            credentials {
                username = 'root'
                password = 'pzOLiJ9Iig3wkE1KPDJjFxW1vBgfW8fChVr7UsrAer+5SS4tqqyvtG6sv35yfsdq'
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

shadowJar {
    dependencies {
        include(dependency(':org.jetbrains.kotlin:kotlin-stdlib:'))
    }
}

dependencies {
    compileOnly 'de.framedev:MySQLAPI:1.0.5-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    api 'org.jetbrains.kotlin:kotlin-stdlib'
    api group: 'org.mongodb', name: 'mongo-java-driver', version: '3.12.8'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.framedev.frameeconomy.main.Main'
    }
    archiveClassifier = "all"
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

kotlin {
    /* Targets configuration omitted.
    *  To find out how to configure the targets, please follow the link:
    *  https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#setting-up-targets */

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
    }
}
